[{"/home/ubed/Documents/expressjs/event-api/client/src/index.js":"1","/home/ubed/Documents/expressjs/event-api/client/src/App.js":"2","/home/ubed/Documents/expressjs/event-api/client/src/reportWebVitals.js":"3","/home/ubed/Documents/expressjs/event-api/client/src/Components/Navbar/NavBar.js":"4","/home/ubed/Documents/expressjs/event-api/client/src/pages/Booking/Bookings.js":"5","/home/ubed/Documents/expressjs/event-api/client/src/pages/Events/Events.js":"6","/home/ubed/Documents/expressjs/event-api/client/src/pages/Auth/Auth.js":"7","/home/ubed/Documents/expressjs/event-api/client/src/context/auth-context.js":"8","/home/ubed/Documents/expressjs/event-api/client/src/Components/Model/Model.js":"9","/home/ubed/Documents/expressjs/event-api/client/src/Components/Events/EventList/EventList.js":"10","/home/ubed/Documents/expressjs/event-api/client/src/Components/Events/EventList/EventItem.js":"11"},{"size":500,"mtime":1610541324132,"results":"12","hashOfConfig":"13"},{"size":1846,"mtime":1610718784023,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610541324132,"results":"15","hashOfConfig":"13"},{"size":1288,"mtime":1610734439826,"results":"16","hashOfConfig":"13"},{"size":217,"mtime":1610703580363,"results":"17","hashOfConfig":"13"},{"size":5765,"mtime":1611008154466,"results":"18","hashOfConfig":"13"},{"size":2819,"mtime":1610717653630,"results":"19","hashOfConfig":"13"},{"size":166,"mtime":1610895380912,"results":"20","hashOfConfig":"13"},{"size":711,"mtime":1610721905363,"results":"21","hashOfConfig":"13"},{"size":482,"mtime":1611007993514,"results":"22","hashOfConfig":"13"},{"size":549,"mtime":1611008056114,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"wm57dm",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubed/Documents/expressjs/event-api/client/src/index.js",[],["53","54"],"/home/ubed/Documents/expressjs/event-api/client/src/App.js",[],["55","56"],"/home/ubed/Documents/expressjs/event-api/client/src/reportWebVitals.js",[],["57","58"],"/home/ubed/Documents/expressjs/event-api/client/src/Components/Navbar/NavBar.js",[],"/home/ubed/Documents/expressjs/event-api/client/src/pages/Booking/Bookings.js",[],["59","60"],"/home/ubed/Documents/expressjs/event-api/client/src/pages/Events/Events.js",["61","62","63","64","65"],"import React, { Component } from \"react\";\n// import \"../../pages/Events/Event.css\";\nimport Modal from \"../../Components/Model/Model\";\nimport authContext from \"../../context/auth-context\";\nimport EventList from \"../../Components/Events/EventList/EventList\";\n\nexport default class Events extends Component {\n  state = {\n    creating: false,\n    events: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.titleEl = React.createRef();\n    this.priceEL = React.createRef();\n    this.dateEl = React.createRef();\n    this.descriptionEL = React.createRef();\n  }\n\n  static contextType = authContext;\n\n  startCreateEventHandler = () => {\n    this.setState({\n      creating: true,\n    });\n  };\n\n  modelConfirmHandler = () => {\n    const title = this.titleEl.current.value;\n    const price = this.priceEL.current.value;\n    const date = this.dateEl.current.value;\n    const description = this.descriptionEL.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      price.trim().length === 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      return;\n    }\n\n    const event = {\n      price: price,\n      title: title,\n      date: date,\n      description: description,\n    };\n    console.log(event);\n\n    const token = this.context.token;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    };\n\n    const requestBody = {\n      query: `\n        mutation{\n          createEvent(eventInput: {\n            title: \"${title}\"\n            price: ${price}\n            description: \"${description}\"\n            date:  \"${date}\"\n          }) {\n            _id\n            title\n            date\n            price\n            description\n            creator {\n              _id\n              email\n            }\n          }\n        }       \n        `,\n    };\n\n    fetch(\"graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: headers,\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"failed\");\n        }\n        return res.json();\n      })\n      .then(() => {\n        this.fetchEvent();\n      })\n      .catch((err) => console.log(err));\n\n    this.setState({\n      creating: false,\n    });\n  };\n\n  fetchEvent() {\n    const token = this.context.token;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    const requestBody = {\n      query: `\n        query{\n          events{\n            _id\n            title\n            date\n            price\n            description\n            creator{\n              _id\n            }\n          }\n        }       \n        `,\n    };\n\n    fetch(\"graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: headers,\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"failed\");\n        }\n        return res.json();\n      })\n      .then((result) => {\n        const event = result.data.events;\n        this.setState({ events: event });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  componentDidMount() {\n    this.fetchEvent();\n  }\n\n  modelCancelHandler = () => {\n    this.setState({\n      creating: false,\n    });\n  };\n  render() {\n    // const eventList = this.state.events.map((event) => {\n    //   return (\n    //     <li key={event._id} className=\"event_list_item\">\n    //       {event.title}\n    //     </li>\n    //   );\n    // });\n\n    return (\n      <React.Fragment>\n        {this.state.creating && (\n          <Modal\n            title=\"Add event\"\n            canCancel\n            canConfirm\n            onCancel={this.modelCancelHandler}\n            onConfirm={this.modelConfirmHandler}\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\" htmlFor=\"title\">\n                  Title\n                </label>\n                <input\n                  ref={this.titleEl}\n                  type=\"text\"\n                  id=\"title\"\n                  placeholder=\"Title\"\n                />\n              </div>\n\n              <div className=\"form-control\">\n                <label htmlFor=\"price\" htmlFor=\"price\">\n                  Price\n                </label>\n                <input\n                  ref={this.priceEL}\n                  type=\"number\"\n                  id=\"price\"\n                  placeholder=\"Price\"\n                />\n              </div>\n\n              <div className=\"form-control\">\n                <label htmlFor=\"Date\" htmlFor=\"date\">\n                  Date\n                </label>\n                <input\n                  ref={this.dateEl}\n                  type=\"date\"\n                  id=\"date\"\n                  placeholder=\"Date\"\n                />\n              </div>\n\n              <div className=\"form-control\">\n                <label htmlFor=\"description\" htmlFor=\"description\">\n                  Description\n                </label>\n                <textarea\n                  ref={this.descriptionEL}\n                  id=\"description\"\n                  rows=\"5\"\n                ></textarea>\n              </div>\n            </form>\n          </Modal>\n        )}\n        {this.context.token && (\n          <div className=\"event_ctl\">\n            <h2>Share Your Event</h2>\n            <button\n              onClick={this.startCreateEventHandler}\n              className=\"event_btn\"\n            >\n              Create Event\n            </button>\n          </div>\n        )}\n        <br /> <br />\n        {/* jjjj */}\n        <EventList\n          events={this.state.events}\n          authUserId={this.context.userId}\n        />\n        {/* <ul className=\"events_list\">{eventList}</ul> */}\n      </React.Fragment>\n    );\n  }\n}\n","/home/ubed/Documents/expressjs/event-api/client/src/pages/Auth/Auth.js",[],["66","67"],"/home/ubed/Documents/expressjs/event-api/client/src/context/auth-context.js",[],"/home/ubed/Documents/expressjs/event-api/client/src/Components/Model/Model.js",[],"/home/ubed/Documents/expressjs/event-api/client/src/Components/Events/EventList/EventList.js",["68"],"import React, { Component } from \"react\";\nimport \"../EventList/EventList.css\";\nimport EventItem from \"./EventItem\";\n\nconst eventList = (props) => {\n  const events = props.events.map((event) => {\n    return (\n      <EventItem\n        key={event._id}\n        eventId={event._id}\n        title={event.title}\n        userId={props.authUserId}\n        creatorId ={event.creator._id}\n      />\n    );\n  });\n  return <ul className=\"events_list\">{events}</ul>;\n};\n\nexport default eventList;\n","/home/ubed/Documents/expressjs/event-api/client/src/Components/Events/EventList/EventItem.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"69","replacedBy":"75"},{"ruleId":"71","replacedBy":"76"},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":103,"column":11,"nodeType":"81","messageId":"82","endLine":103,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":173,"column":40,"nodeType":"85","endLine":173,"endColumn":55},{"ruleId":"83","severity":1,"message":"84","line":185,"column":40,"nodeType":"85","endLine":185,"endColumn":55},{"ruleId":"83","severity":1,"message":"84","line":197,"column":39,"nodeType":"85","endLine":197,"endColumn":53},{"ruleId":"83","severity":1,"message":"84","line":209,"column":46,"nodeType":"85","endLine":209,"endColumn":67},{"ruleId":"69","replacedBy":"86"},{"ruleId":"71","replacedBy":"87"},{"ruleId":"79","severity":1,"message":"88","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],["89"],["90"],["89"],["90"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["89"],["90"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]